//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FMirandaExamenBecasEntities : DbContext
    {
        public FMirandaExamenBecasEntities()
            : base("name=FMirandaExamenBecasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumno { get; set; }
        public virtual DbSet<Becas> Becas { get; set; }
    
        public virtual int AlumnoAdd(string nombreAlumno, string apellidoPaterno, string apellidoMaterno, Nullable<int> idBeca)
        {
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("NombreAlumno", nombreAlumno) :
                new ObjectParameter("NombreAlumno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idBecaParameter = idBeca.HasValue ?
                new ObjectParameter("IdBeca", idBeca) :
                new ObjectParameter("IdBeca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoAdd", nombreAlumnoParameter, apellidoPaternoParameter, apellidoMaternoParameter, idBecaParameter);
        }
    
        public virtual int AlumnoDelete(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoDelete", idAlumnoParameter);
        }
    
        public virtual ObjectResult<AlumnoGetAll_Result> AlumnoGetAll(string nombreAlumno, string apellidoPaterno, string apellidoMaterno, Nullable<int> idBeca)
        {
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("NombreAlumno", nombreAlumno) :
                new ObjectParameter("NombreAlumno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idBecaParameter = idBeca.HasValue ?
                new ObjectParameter("IdBeca", idBeca) :
                new ObjectParameter("IdBeca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetAll_Result>("AlumnoGetAll", nombreAlumnoParameter, apellidoPaternoParameter, apellidoMaternoParameter, idBecaParameter);
        }
    
        public virtual ObjectResult<AlumnoGetById_Result> AlumnoGetById(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetById_Result>("AlumnoGetById", idAlumnoParameter);
        }
    
        public virtual int AlumnoUpdate(Nullable<int> idAlumno, string nombreAlumno, string apellidoPaterno, string apellidoMaterno, Nullable<int> idBeca)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("NombreAlumno", nombreAlumno) :
                new ObjectParameter("NombreAlumno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idBecaParameter = idBeca.HasValue ?
                new ObjectParameter("IdBeca", idBeca) :
                new ObjectParameter("IdBeca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoUpdate", idAlumnoParameter, nombreAlumnoParameter, apellidoPaternoParameter, apellidoMaternoParameter, idBecaParameter);
        }
    
        public virtual int BecasAdd(string tipodeBeca)
        {
            var tipodeBecaParameter = tipodeBeca != null ?
                new ObjectParameter("TipodeBeca", tipodeBeca) :
                new ObjectParameter("TipodeBeca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BecasAdd", tipodeBecaParameter);
        }
    
        public virtual int BecasDelete(Nullable<int> idBeca)
        {
            var idBecaParameter = idBeca.HasValue ?
                new ObjectParameter("IdBeca", idBeca) :
                new ObjectParameter("IdBeca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BecasDelete", idBecaParameter);
        }
    
        public virtual ObjectResult<string> BecasGetAll(string tipodeBeca)
        {
            var tipodeBecaParameter = tipodeBeca != null ?
                new ObjectParameter("TipodeBeca", tipodeBeca) :
                new ObjectParameter("TipodeBeca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BecasGetAll", tipodeBecaParameter);
        }
    }
}
